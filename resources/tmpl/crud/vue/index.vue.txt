<template>
  <div class="app-container">
    <el-form :model="queryParams" ref="queryForm" size="small" :inline="true" v-show="showSearch" label-width="68px">
      {{range .SearchColumn}}{{if eq .HtmlType "input"}}
     <el-form-item label="{{.ColumnComment}}" prop="{{.JsonField}}">
        <el-input
          v-model="queryParams.{{.JsonField}}"
          placeholder="请输入{{.ColumnComment}}"
          clearable
          @keyup.enter.native="handleQuery"
        />
     </el-form-item>{{else if and ( or (eq .HtmlType "select") (eq .HtmlType "radio")) (ne .DictType "")}}
    <el-form-item label="{{.ColumnComment}}" prop="{{.JsonField}}">
        <el-select v-model="queryParams.{{.JsonField}}" placeholder="请选择{{.ColumnComment}}" clearable>
          <el-option
            v-for="dict in dict.type.{{.DictType}}"
            :key="dict.value"
            :label="dict.label"
            :value="dict.value"
          />
        </el-select>
    </el-form-item>{{else if and ( or (eq .HtmlType "select") (eq .HtmlType "radio")) (eq .DictType "")}}
     <el-form-item label="{{.ColumnComment}}" prop="{{.JsonField}}">
         <el-select v-model="queryParams.{{.JsonField}}" placeholder="请选择{{.ColumnComment}}" clearable>
            <el-option label="请选择字典生成" value="" />
         </el-select>
     </el-form-item>{{else if and (eq .HtmlType "datetime") (ne .QueryType "BETWEEN")}}
    <el-form-item label="{{.ColumnComment}}" prop="{{.JsonField}}">
        <el-date-picker clearable
          v-model="queryParams.{{.JsonField}}"
          type="date"
          value-format="yyyy-MM-dd"
          placeholder="请选择{{.ColumnComment}}">
        </el-date-picker>
      </el-form-item>{{else if and (eq .HtmlType "datetime") (eq .QueryType "BETWEEN")}}
     <el-form-item label="{{.ColumnComment}}">
         <el-date-picker
           v-model="daterange{{.GoField}}"
           style="width: 240px"
           value-format="yyyy-MM-dd"
           type="daterange"
           range-separator="-"
           start-placeholder="开始日期"
           end-placeholder="结束日期"
         ></el-date-picker>
     </el-form-item>{{end}}{{end}}
      <el-form-item>
        <el-button type="primary" icon="el-icon-search" size="mini" @click="handleQuery">搜索</el-button>
        <el-button icon="el-icon-refresh" size="mini" @click="resetQuery">重置</el-button>
      </el-form-item>
    </el-form>

    <el-row :gutter="10" class="mb8">
      <el-col :span="1.5">
        <el-button
          type="primary"
          plain
          icon="el-icon-plus"
          size="mini"
          @click="handleAdd"
          v-hasPermi="['{{.ModuleName}}:{{.BusinessName}}:add']"
        >新增</el-button>
      </el-col>
      <el-col :span="1.5">
        <el-button
          type="success"
          plain
          icon="el-icon-edit"
          size="mini"
          :disabled="single"
          @click="handleUpdate"
          v-hasPermi="['{{.ModuleName}}:{{.BusinessName}}:edit']"
        >修改</el-button>
      </el-col>
      <el-col :span="1.5">
        <el-button
          type="danger"
          plain
          icon="el-icon-delete"
          size="mini"
          :disabled="multiple"
          @click="handleDelete"
          v-hasPermi="['{{.ModuleName}}:{{.BusinessName}}:remove']"
        >删除</el-button>
      </el-col>
      <el-col :span="1.5">
          <el-button
            type="warning"
            plain
            icon="el-icon-download"
            size="mini"
            @click="handleExport"
            v-hasPermi="['{{.ModuleName}}:{{.BusinessName}}:export']"
          >导出</el-button>
      </el-col>
      <right-toolbar :showSearch.sync="showSearch" @queryTable="getList"></right-toolbar>
    </el-row>

    <el-table v-loading="loading" :data="{{.BusinessName}}List" @selection-change="handleSelectionChange">
      <el-table-column type="selection" width="55" align="center" />
      <el-table-column label="{{.PKColumn.ColumnComment}}" align="center" prop="{{.PKColumn.JsonField}}" width="100" />
      {{range .ListColumn}}{{if eq .HtmlType "datetime"}}
       <el-table-column label="{{.ColumnComment}}" align="center" prop="{{.JsonField}}" width="180">
        <template slot-scope="scope">
          <span>{{"{{"}} parseTime(scope.row.{{.JsonField}}, '{y}-{m}-{d}') {{"}}"}}</span>
        </template>
       </el-table-column>{{else if eq .HtmlType "imageUpload"}}
      <el-table-column label="{{.ColumnComment}}" align="center" prop="{{.JsonField}}" width="100">
          <template slot-scope="scope">
            <image-preview :src="scope.row.{{.JsonField}}" :width="50" :height="50"/>
          </template>
        </el-table-column>{{else if ne .DictType ""}}
       <el-table-column label="{{.ColumnComment}}" align="center" prop="{{.JsonField}}">
           <template slot-scope="scope">
           {{if eq .HtmlType "checkbox"}}
             <dict-tag :options="dict.type.{{.DictType}}" :value="scope.row.{{.JsonField}} ? scope.row.{{.JsonField}}.split(',') : []"/>{{else}}
             <dict-tag :options="dict.type.{{.DictType}}" :value="scope.row.{{.JsonField}}"/>{{end}}
           </template>
         </el-table-column>{{else}}
       <el-table-column label="{{.ColumnComment}}" align="center" prop="{{.JsonField}}" />{{end}}{{end}}
      <el-table-column label="操作" align="center" class-name="small-padding fixed-width">
        <template slot-scope="scope">
          <el-button
            size="mini"
            type="text"
            icon="el-icon-edit"
            @click="handleUpdate(scope.row)"
            v-hasPermi="['{{.ModuleName}}:{{.BusinessName}}:edit']"
          >修改</el-button>
          <el-button
            size="mini"
            type="text"
            icon="el-icon-delete"
            @click="handleDelete(scope.row)"
            v-hasPermi="['{{.ModuleName}}:{{.BusinessName}}:remove']"
          >删除</el-button>
        </template>
      </el-table-column>
    </el-table>

    <pagination
      v-show="total>0"
      :total="total"
      :page.sync="queryParams.pageNum"
      :limit.sync="queryParams.pageSize"
      @pagination="getList"
    />

    <!-- 添加或修改{{.FunctionName}}对话框 -->
    <el-dialog :title="title" :visible.sync="open" width="780px" append-to-body>
      <el-form ref="form" :model="form" :rules="rules" label-width="80px">
      {{range .InsertColumn}}{{if eq .HtmlType "input"}}
      <el-form-item label="{{.ColumnComment}}" prop="{{.JsonField}}">
        <el-input v-model="form.{{.JsonField}}" placeholder="请输入{{.ColumnComment}}" />
      </el-form-item>{{else if eq .HtmlType "imageUpload"}}
      <el-form-item label="{{.ColumnComment}}" prop="{{.JsonField}}">
        <image-upload v-model="form.{{.JsonField}}"/>
      </el-form-item>{{else if eq .HtmlType "fileUpload"}}
      <el-form-item label="{{.ColumnComment}}" prop="{{.JsonField}}">
        <file-upload v-model="form.{{.JsonField}}"/>
      </el-form-item>{{else if eq .HtmlType "editor"}}
      <el-form-item label="{{.ColumnComment}}">
        <editor v-model="form.{{.JsonField}}" :min-height="192"/>
      </el-form-item>{{else if and (eq .HtmlType "editor") (ne .DictType "")}}
      <el-form-item label="{{.ColumnComment}}" prop="${field}">
        <el-select v-model="form.{{.JsonField}}" placeholder="请选择{{.ColumnComment}}">
          <el-option
            v-for="dict in dict.type.{{.DictType}}"
            :key="dict.value"
            :label="dict.label"
            {{if or (eq .GoType "int32") (eq .GoType "int 64")}}
            :value="parseInt(dict.value)"
            {{else}}
            :value="dict.value"
            {{end}}
          ></el-option>
        </el-select>
      </el-form-item>{{else if and (eq .HtmlType "select") (eq .DictType "")}}
      <el-form-item label="{{.ColumnComment}}" prop="${field}">
        <el-select v-model="form.{{.JsonField}}" placeholder="请选择{{.ColumnComment}}">
          <el-option label="请选择字典生成" value="" />
        </el-select>
      </el-form-item>{{else if and (eq .HtmlType "checkbox") (ne .DictType "")}}
      <el-form-item label="{{.ColumnComment}}" prop="{{.JsonField}}">
        <el-checkbox-group v-model="form.${field}">
          <el-checkbox
            v-for="dict in dict.type.{{.DictType}}"
            :key="dict.value"
            :label="dict.value">
            {{"{{"}}dict.label{{"}}"}}
          </el-checkbox>
        </el-checkbox-group>
      </el-form-item>{{else if and (eq .HtmlType "checkbox") (eq .DictType "")}}
      <el-form-item label="{{.ColumnComment}}" prop="{{.JsonField}}">
        <el-checkbox-group v-model="form.{{.JsonField}}">
          <el-checkbox>请选择字典生成</el-checkbox>
        </el-checkbox-group>
      </el-form-item>{{else if and (eq .HtmlType "radio") (ne .DictType "")}}
      <el-form-item label="{{.ColumnComment}}" prop="{{.JsonField}}">
        <el-radio-group v-model="form.{{.JsonField}}">
          <el-radio
            v-for="dict in dict.type.{{.DictType}}"
            :key="dict.value"
            {{if or (eq .GoType "int32") (eq .GoType "int 64")}}
            :value="parseInt(dict.value)"
            {{else}}
            :value="dict.value"
            {{end}}
          >{{"{{"}}dict.label{{"}}"}}</el-radio>
        </el-radio-group>
      </el-form-item>{{else if and (eq .HtmlType "radio") (eq .DictType "")}}
      <el-form-item label="{{.ColumnComment}}" prop="{{.JsonField}}">
        <el-radio-group v-model="form.{{.JsonField}}">
          <el-radio label="1">请选择字典生成</el-radio>
        </el-radio-group>
      </el-form-item>{{else if eq .HtmlType "datetime"}}
      <el-form-item label="{{.ColumnComment}}" prop="{{.JsonField}}">
        <el-date-picker clearable
          v-model="form.{{.JsonField}}"
          type="date"
          value-format="yyyy-MM-dd"
          placeholder="请选择{{.ColumnComment}}">
        </el-date-picker>
      </el-form-item>{{else if eq .HtmlType "textarea"}}
      <el-form-item label="{{.ColumnComment}}" prop="{{.JsonField}}">
        <el-input v-model="form.{{.JsonField}}" type="textarea" placeholder="请输入内容" />
      </el-form-item>{{end}}{{end}}
      </el-form>
      <div slot="footer" class="dialog-footer">
        <el-button type="primary" @click="submitForm">确 定</el-button>
        <el-button @click="cancel">取 消</el-button>
      </div>
    </el-dialog>
  </div>
</template>

<script>
import { list{{.StructName}}, get{{.StructName}}, del{{.StructName}}, add{{.StructName}}, update{{.StructName}} } from "@/api/{{.ModuleName}}/{{.BusinessName}}";

export default {
  name: "{{.StructName}}",
  {{if ne .Dicts ""}}
  dicts: [{{.Dicts}}],
  {{end}}
  data() {
    return {
      // 遮罩层
      loading: true,
      // 选中数组
      ids: [],
      // 非单个禁用
      single: true,
      // 非多个禁用
      multiple: true,
      // 显示搜索条件
      showSearch: true,
      // 总条数
      total: 0,
      // {{.FunctionName}}表格数据
      {{.BusinessName}}List: [],
      // 弹出层标题
      title: "",
      // 是否显示弹出层
      open: false,
      {{range .SearchColumn}}{{if and (eq .HtmlType "datetime") (eq .QueryType "BETWEEN")}}
      // {{.ColumnComment}}时间范围
      daterange{{.GoField}}: [],{{end}}{{end}}
      // 查询参数
      queryParams: {
        pageNum: 1,
        pageSize: 10,
        {{range .SearchColumn}}
        {{.JsonField}}: null{{end}}
      },
      // 表单参数
      form: {},
      // 表单校验
      rules: {
        {{range .SearchColumn}}{{if eq .IsRequired "1"}}
        {{.JsonField}}: [
          { required: true, message: "{{.ColumnComment}}不能为空", trigger: {{if or (eq .HtmlType "select") (eq .HtmlType "radio")}}"change"{{else}}"blur"{{end}} }
        ],{{end}}{{end}}
      }
    };
  },
  created() {
    this.getList();
  },
  methods: {
    /** 查询{{.FunctionName}}列表 */
    getList() {
      this.loading = true;
      {{$break := false}}{{range .SearchColumn}}{{if not $break}}{{if and (eq .HtmlType "datetime") (eq .QueryType "BETWEEN")}}
      this.queryParams.params = {};{{$break = true}}{{end}}{{end}}{{end}}
      {{range .SearchColumn}}{{if and (eq .HtmlType "datetime") (eq .QueryType "BETWEEN")}}
      if (null != this.daterange{{.GoField}} && '' != this.daterange{{.GoField}}) {
        this.queryParams.params["begin{{.GoField}}"] = this.daterange{{.GoField}}[0];
        this.queryParams.params["end{{.GoField}}"] = this.daterange{{.GoField}}[1];
      }{{end}}{{end}}
      list{{.StructName}}(this.queryParams).then(res => {
        this.noticeList = res.data.rows;
        this.total = res.data.total;
        this.loading = false;
      });
    },
    // 取消按钮
    cancel() {
      this.open = false;
      this.reset();
    },
    // 表单重置
    reset() {
      this.form = {
        {{range .InsertColumn}}{{if eq .HtmlType "checkbox"}}
        {{.JsonField}}: []{{else}}{{.JsonField}}: null
        {{end}}{{end}}
      };
      this.resetForm("form");
    },
    /** 搜索按钮操作 */
    handleQuery() {
      this.queryParams.pageNum = 1;
      this.getList();
    },
    /** 重置按钮操作 */
    resetQuery() {
    {{range .SearchColumn}}{{if and (eq .HtmlType "datetime") (eq .QueryType "BETWEEN")}}
      this.daterange{{.GoField}} = [];{{end}}{{end}}
      this.resetForm("queryForm");
      this.handleQuery();
    },
    // 多选框选中数据
    handleSelectionChange(selection) {
      this.ids = selection.map(item => item.{{.PKColumn.JsonField}})
      this.single = selection.length!=1
      this.multiple = !selection.length
    },
    /** 新增按钮操作 */
    handleAdd() {
      this.reset();
      this.open = true;
      this.title = "添加{{.FunctionName}}";
    },
    /** 修改按钮操作 */
    handleUpdate(row) {
      this.reset();
      const {{.PKColumn.JsonField}} = row.{{.PKColumn.JsonField}} || this.ids
      get{{.StructName}}({{.PKColumn.JsonField}}).then(response => {
        {{range .ColumnList}}{{if eq .HtmlType "checkbox"}}
        this.form.{{.JsonField}} = this.form.{{.JsonField}}.split(",");{{end}}{{end}}
        this.form = response.data;
        this.open = true;
        this.title = "修改{{.FunctionName}}";
      });
    },
    /** 提交按钮 */
    submitForm: function() {
      this.$refs["form"].validate(valid => {
        if (valid) {
          {{range .ColumnList}}{{if eq .HtmlType "checkbox"}}
          this.form.{{.JsonField}} = this.form.{{.JsonField}}.split(",");{{end}}{{end}}
          if (this.form.{{.PKColumn.JsonField}} != undefined) {
            update{{.StructName}}(this.form).then(response => {
              this.$modal.msgSuccess("修改成功");
              this.open = false;
              this.getList();
            });
          } else {
            add{{.StructName}}(this.form).then(response => {
              this.$modal.msgSuccess("新增成功");
              this.open = false;
              this.getList();
            });
          }
        }
      });
    },
    /** 删除按钮操作 */
    handleDelete(row) {
      const {{.PKColumn.JsonField}}s = row.{{.PKColumn.JsonField}} || this.ids
      this.$modal.confirm('是否确认删除数据项？').then(function() {
        return del{{.StructName}}({{.PKColumn.JsonField}}s);
      }).then(() => {
        this.getList();
        this.$modal.msgSuccess("删除成功");
      }).catch(() => {});
    }
    /** 导出按钮操作 */
    handleExport() {
      this.download('{{.ModuleName}}/{{.BusinessName}}/export', {
        ...this.queryParams
      }, {{.BusinessName}}_#[[${new Date().getTime()}]]#.xlsx`)
    }
  }
};
</script>